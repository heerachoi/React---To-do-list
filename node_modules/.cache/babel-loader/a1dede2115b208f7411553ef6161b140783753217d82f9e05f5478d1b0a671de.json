{"ast":null,"code":"var _jsxFileName = \"/Users/heera/Desktop/Web/git/React---To-do-list/src/component/TodoList.jsx\";\nimport './TodoList.css';\n\n// Todo 리스트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    todos,\n    setTodos,\n    isDone\n  } = _ref;\n  // 완료 버튼이 onClick되면 실행되는 부분\n  const handleComplete = todo => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        return {\n          ...item,\n          isDone: !item.isDone\n        };\n      }\n      return item;\n    }));\n  };\n\n  // 삭제 버튼이 onClick되면 실행되는 부분\n  const handleDelete = _ref2 => {\n    let {\n      id\n    } = _ref2;\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // Todos와 Work는 false값을 받아오고 Done은 true값을 받아온다.\n  // trueOrFalse의 상태에 따라 isDone을 확인해서 resultDone에 추가하여 배열을 return한다.\n  const checkDone = (todos, trueOrFalse) => {\n    let resultDone = [];\n    for (let todo of todos) {\n      if (todo.isDone === trueOrFalse) {\n        resultDone.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"todo-title\",\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-context\",\n            children: todo.context\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-delete button\",\n              onClick: () => handleDelete(todo),\n              children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-complete button\",\n              onClick: () => handleComplete(todo),\n              children: trueOrFalse ? '취소' : '완료'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return resultDone;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list-title\",\n      children: isDone ? 'Working..🔥' : 'Done..!🎉'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-wrapper\",\n      children: checkDone(todos, isDone)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["TodoList","todos","setTodos","isDone","handleComplete","todo","map","item","id","handleDelete","filter","checkDone","trueOrFalse","resultDone","push","title","context"],"sources":["/Users/heera/Desktop/Web/git/React---To-do-list/src/component/TodoList.jsx"],"sourcesContent":["import './TodoList.css';\n\n// Todo 리스트\nconst TodoList = ({todos, setTodos, isDone}) => {\n  // 완료 버튼이 onClick되면 실행되는 부분\n  const handleComplete = (todo) => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {...item, isDone: !item.isDone};\n        }\n        return item;\n      })\n    );\n  };\n\n  // 삭제 버튼이 onClick되면 실행되는 부분\n  const handleDelete = ({id}) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  // Todos와 Work는 false값을 받아오고 Done은 true값을 받아온다.\n  // trueOrFalse의 상태에 따라 isDone을 확인해서 resultDone에 추가하여 배열을 return한다.\n  const checkDone = (todos, trueOrFalse) => {\n    let resultDone = [];\n    for (let todo of todos) {\n      if (todo.isDone === trueOrFalse) {\n        resultDone.push(\n          <div className='todo-container' key={todo.id}>\n            <h2 className='todo-title'>{todo.title}</h2>\n            <div className='todo-context'>{todo.context}</div>\n            <div className='buttons'>\n              <button className='button-delete button' onClick={() => handleDelete(todo)}>\n                삭제하기\n              </button>\n              <button className='button-complete button' onClick={() => handleComplete(todo)}>\n                {trueOrFalse ? '취소' : '완료'}\n              </button>\n            </div>\n          </div>\n        );\n      }\n    }\n    return resultDone;\n  };\n\n  return (\n    <div className='list-container'>\n      {/*<h2 className='list-title'>Working..🔥</h2>\n  <div className='list-wrapper'>{checkDone(todos, false)}</div> */}\n      <h2 className='list-title'>{isDone ? 'Working..🔥' : 'Done..!🎉'}</h2>\n      <div className='list-wrapper'>{checkDone(todos, isDone)}</div>\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAO,gBAAgB;;AAEvB;AAAA;AACA,MAAMA,QAAQ,GAAG,QAA+B;EAAA,IAA9B;IAACC,KAAK;IAAEC,QAAQ;IAAEC;EAAM,CAAC;EACzC;EACA,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/BH,QAAQ,CACND,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,EAAE;QACvB,OAAO;UAAC,GAAGD,IAAI;UAAEJ,MAAM,EAAE,CAACI,IAAI,CAACJ;QAAM,CAAC;MACxC;MACA,OAAOI,IAAI;IACb,CAAC,CAAC,CACH;EACH,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,SAAU;IAAA,IAAT;MAACD;IAAE,CAAC;IACxBN,QAAQ,CAACD,KAAK,CAACS,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;;EAED;EACA;EACA,MAAMG,SAAS,GAAG,CAACV,KAAK,EAAEW,WAAW,KAAK;IACxC,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAK,IAAIR,IAAI,IAAIJ,KAAK,EAAE;MACtB,IAAII,IAAI,CAACF,MAAM,KAAKS,WAAW,EAAE;QAC/BC,UAAU,CAACC,IAAI,eACb;UAAK,SAAS,EAAC,gBAAgB;UAAA,wBAC7B;YAAI,SAAS,EAAC,YAAY;YAAA,UAAET,IAAI,CAACU;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eAC5C;YAAK,SAAS,EAAC,cAAc;YAAA,UAAEV,IAAI,CAACW;UAAO;YAAA;YAAA;YAAA;UAAA,QAAO,eAClD;YAAK,SAAS,EAAC,SAAS;YAAA,wBACtB;cAAQ,SAAS,EAAC,sBAAsB;cAAC,OAAO,EAAE,MAAMP,YAAY,CAACJ,IAAI,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAElE,eACT;cAAQ,SAAS,EAAC,wBAAwB;cAAC,OAAO,EAAE,MAAMD,cAAc,CAACC,IAAI,CAAE;cAAA,UAC5EO,WAAW,GAAG,IAAI,GAAG;YAAI;cAAA;cAAA;cAAA;YAAA,QACnB;UAAA;YAAA;YAAA;YAAA;UAAA,QACL;QAAA,GAV6BP,IAAI,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAWtC,CACP;MACH;IACF;IACA,OAAOK,UAAU;EACnB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAG7B;MAAI,SAAS,EAAC,YAAY;MAAA,UAAEV,MAAM,GAAG,aAAa,GAAG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM,eACtE;MAAK,SAAS,EAAC,cAAc;MAAA,UAAEQ,SAAS,CAACV,KAAK,EAAEE,MAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEV,CAAC;AAAC,KAnDIH,QAAQ;AAqDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}