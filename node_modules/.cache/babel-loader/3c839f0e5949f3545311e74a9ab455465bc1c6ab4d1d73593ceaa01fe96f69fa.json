{"ast":null,"code":"var _jsxFileName = \"/Users/heera/Desktop/Web/git/React---To-do-list/src/App.js\",\n  _s = $RefreshSig$();\n// useState에 저장해 두었다가 나중에 사용한다.\nimport React, { useState } from 'react';\nimport './App.css';\nimport TodoBoard from './component/TodoBoard';\nimport Header from './component/Header';\nimport Form from './component/Form';\nimport TodoList from './component/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  //  input에 inputValue 값을 넣어주어야 한다. - setInputValue을 사용해서\n  // useState([]) = 타입은 배열을 가리킨다.\n  const [todoList, setTodoList] = useState([]);\n  const addItem = () => {\n    // console.log('im here', inputValue);\n    setTodoList([...todoList, inputValue]); // 원래 내용 + 현재 input\n  };\n\n  const [input, setInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      value: input,\n      setInput: setInput,\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      type: \"text\",\n      onChange: event => setInputValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addButton\",\n      onClick: addItem,\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoBoard, {\n      todoList: todoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3bP0TMVnvSaQYsPJ8Im/7YPP5uM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoBoard","Header","Form","TodoList","App","inputValue","setInputValue","todoList","setTodoList","addItem","input","setInput","todos","setTodos","event","target","value"],"sources":["/Users/heera/Desktop/Web/git/React---To-do-list/src/App.js"],"sourcesContent":["// useState에 저장해 두었다가 나중에 사용한다.\nimport React, {useState} from 'react';\nimport './App.css';\nimport TodoBoard from './component/TodoBoard';\nimport Header from './component/Header';\nimport Form from './component/Form';\nimport TodoList from './component/TodoList';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  //  input에 inputValue 값을 넣어주어야 한다. - setInputValue을 사용해서\n  // useState([]) = 타입은 배열을 가리킨다.\n  const [todoList, setTodoList] = useState([]);\n\n  const addItem = () => {\n    // console.log('im here', inputValue);\n    setTodoList([...todoList, inputValue]); // 원래 내용 + 현재 input\n  };\n\n  const [input, setInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  return (\n    <main className='main'>\n      <Header />\n      <Form value={input} setInput={setInput} todos={todos} setTodos={setTodos} />\n      <input value={inputValue} type='text' onChange={(event) => setInputValue(event.target.value)} />\n      <button className='addButton' onClick={addItem}>\n        추가하기\n      </button>\n      <TodoBoard todoList={todoList} />\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA;EACA,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,OAAO,GAAG,MAAM;IACpB;IACAD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEF,UAAU,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,oBACE;IAAM,SAAS,EAAC,MAAM;IAAA,wBACpB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,IAAI;MAAC,KAAK,EAAEW,KAAM;MAAC,QAAQ,EAAEC,QAAS;MAAC,KAAK,EAAEC,KAAM;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5E;MAAO,KAAK,EAAER,UAAW;MAAC,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAGS,KAAK,IAAKR,aAAa,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAChG;MAAQ,SAAS,EAAC,WAAW;MAAC,OAAO,EAAEP,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtC,eACT,QAAC,SAAS;MAAC,QAAQ,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEX;AAAC,GAxBQH,GAAG;AAAA,KAAHA,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}